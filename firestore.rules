rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Public health check collection for connection testing
    match /health/{docId} {
      allow read: if true;
      allow write: if false;
    }
    
    // Users can read/write their own profile (App Check temporarily disabled)
    match /users/{userId} {
      allow read, write: if request.auth != null 
        && request.auth.uid == userId;
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && isValidUserData();
    }
    
    // Locations collection - read access for authenticated users with app check
    match /locations/{locationId} {
      allow read: if request.auth != null && request.app_check_token != null;
      allow create, update: if request.auth != null 
        && request.app_check_token != null 
        && isValidLocationData();
      allow delete: if request.auth != null 
        && request.app_check_token != null 
        && (resource.data.createdBy == request.auth.uid || isAdmin());
    }
    
    // Helper functions
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    function isValidUserData() {
      return 'email' in request.resource.data 
        && 'displayName' in request.resource.data
        && request.resource.data.email is string
        && request.resource.data.displayName is string;
    }
    
    function isValidLocationData() {
      return 'name' in request.resource.data
        && 'coordinates' in request.resource.data
        && 'createdBy' in request.resource.data
        && request.resource.data.createdBy == request.auth.uid;
    }
  }
}
