apiVersion: apps/v1
kind: Deployment
metadata:
  name: scenehunter-v2
  labels:
    app: scenehunter-v2
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scenehunter-v2
  template:
    metadata:
      labels:
        app: scenehunter-v2
        version: v1
    spec:
      containers:
      - name: scenehunter-v2
        image: app
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: HOSTNAME
          value: "0.0.0.0"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: scenehunter-v2-service
  labels:
    app: scenehunter-v2
spec:
  type: ClusterIP
  selector:
    app: scenehunter-v2
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
